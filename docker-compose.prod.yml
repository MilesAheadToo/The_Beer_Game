version: '3.8'

services:
  db:
    image: mariadb:10.8
    container_name: beer_game_db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - db_data:/var/lib/mysql
      - ./config/mysql/conf.d:/etc/mysql/conf.d
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-p${MYSQL_ROOT_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 10
    networks:
      - beer-game-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
      args:
        - ENVIRONMENT=production
    container_name: beer_game_backend
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    environment:
      - MYSQL_SERVER=db
      - MYSQL_HOST=db
      - MYSQL_PORT=3306
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_DB=${MYSQL_DATABASE}
      - SECRET_KEY=${SECRET_KEY}
      - ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
      - REFRESH_TOKEN_EXPIRE_DAYS=7
      - GUNICORN_WORKERS=4
      - GUNICORN_THREADS=2
      - GUNICORN_TIMEOUT=120
      - GUNICORN_LOG_LEVEL=info
      - PYTHONUNBUFFERED=1
      - TZ=UTC
    ports:
      - "8000:8000"
    networks:
      - beer-game-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  nginx:
    image: nginx:alpine
    container_name: beer_game_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./frontend/build:/usr/share/nginx/html
      - ./config/nginx/conf.d:/etc/nginx/conf.d
      - ./config/nginx/ssl:/etc/nginx/ssl
    depends_on:
      - backend
    networks:
      - beer-game-network

networks:
  beer-game-network:
    driver: bridge

volumes:
  db_data:
